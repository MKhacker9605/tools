Setting up a vulnerable web application like DVWA (Damn Vulnerable Web Application) is a great way to practice penetration testing in a controlled and ethical environment. Below are the steps to set it up and perform a basic penetration test:


---

1. Set Up the Environment

Ensure you have the necessary tools and environment for this exercise.

a. Requirements

A machine capable of running virtualization software.

VirtualBox or VMware for creating a virtual environment.

A Linux distribution (Kali Linux is recommended for penetration testing tools).

DVWA files (can be downloaded from GitHub).


b. Setting Up DVWA

1. Install a LAMP Stack (Linux, Apache, MySQL, PHP) on your system.

sudo apt update
sudo apt install apache2 mysql-server php php-mysqli


2. Download DVWA:

git clone https://github.com/digininja/DVWA.git
cd DVWA
sudo cp -r * /var/www/html/


3. Set File Permissions:

sudo chmod -R 755 /var/www/html/


4. Configure Database:

Open the browser and navigate to http://<your-server-IP>/setup.php.

Follow the on-screen instructions to configure the database.



5. Update Configuration: Edit the configuration file:

sudo nano /var/www/html/config/config.inc.php

Update the database credentials as per your setup.


6. Start the Services:

sudo service apache2 start
sudo service mysql start




---

2. Perform a Penetration Test

Once DVWA is set up, you can use tools available in Kali Linux or manual methods to explore vulnerabilities.

a. Reconnaissance

1. Enumerate the Web Application: Use tools like Nikto or Burp Suite to gather information.

nikto -h http://<your-server-IP>/


2. Identify the PHP version, headers, and exposed directories.



b. Exploitation Techniques

1. SQL Injection:

Log in to DVWA, set the difficulty to Low.

Navigate to the SQL Injection page.

Test common payloads like:

' OR '1'='1' --

Check the database response.



2. Command Injection:

Navigate to the Command Injection module.

Inject payloads like:

; ls

to execute system commands.



3. Cross-Site Scripting (XSS):

Use the XSS module to inject scripts such as:

<script>alert('XSS');</script>




c. Vulnerability Scanning

Use tools like OWASP ZAP or Nmap:

nmap -sV -p- <your-server-IP>

d. Reporting

Document the following:

Vulnerabilities found.

Exploited weaknesses.

Steps to reproduce and mitigate issues.



---

3. Post-Engagement

After testing, ensure you:

1. Restore Security: Reset the web application to its secure state.


2. Analyze Results: Reflect on the vulnerabilities you exploited and their mitigations.



Would you like assistance with detailed commands or reporting templates for your findings?

